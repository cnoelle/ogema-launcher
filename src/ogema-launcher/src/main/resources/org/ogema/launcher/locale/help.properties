help=print this message
build=do not start framework, build a distribution archive based on the current directory
buildoffline=do not start framework, build a distribution archive based on the current directory, do not include Maven/Aether libraries
clean=delete temporary files and persistent framework data before starting 
config=relative or absolute path to configuration file. Alternatively only the path and it will be looked for a file named "config.ini" in that directory.
configarea=path to OSGi configuration area
console=start framework with OSGi console. The additional argument <console port> is used to connect to \
the console via telnet or SSH. For now only the Equinox built-in console is supported with Telnet.
deployment-package=create a jar file containing the bundles to be started in this run configuration, and a Manifest file, \
according to the OSGi deployment admin specification.
tag-snapshots=Replace SNAPSHOT versions by a new version, that includes the current date and time. \
This is useful in conjuntion with the option deployment-package
offline=run in offline mode, do not load bundles via Maven/Aether
properties=path to properties file or directory containing property files
refresh_bundles=update already installed bundles while starting the framework and start all bundles.
refresh_timeout=If bundles were updated (including framework bundle) then Felix will need \
specific time to get back up again. Equinox won't need this timeout so it can be set to 0.
repositories=Configuration file for external maven repositories (default=%s)
restart=tells the launcher that the framework has been restarted after a controlled shutdown with exit code \
signalling the need for a restart. Options such as '-clean' or '--update-bundles' will be ignored.
startlevel=start level for initial start-up. If not specified, the start level will be set to the highest \
bundle start level, so that all bundles will be started. This option is mainly a debugging tool, not \
targeted at productive systems
strict=use strict mode. This means that the launcher will not try to recover in the case of an exception, \
 but rather abort the framework start. Do not use in production mode! Purely for development.
userundironly=bundles will be resolved in the current run directory only. No \
Maven/Aether or given workspace location will be used.
update_bundles=Force update of all bundles - useful when working with snapshot versions \
that were recently changed and a non clean start is not an option.
verbose=verbose output
workspaceloc=relative or absolute path to the workspace. Bundles will be loaded directly from their project \
path in the workspace if possible (-> hot code replacement - to avoid building and updating manually). \
For now it is needed to execute 'mvn install' initially so that the manifest file is generated in \
the target folder. Everytime when a change is made in the pom.xml 'mvn install' has to be executed \
again so that the manifest will be updated as well.
security=enable OSGi security manager and optionally install the rules from the \
  policy file before starting the framework.
outfile=Name of output archive, will also be used to determine archive format (.zip, .tar, .tgz or .tar.gz) (requires --build)